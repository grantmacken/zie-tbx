name: Build
on:
  # schedule:
  #   - cron: '0 1 * * 1'  #  1am every monday
  push:
    branches:
    - main
    paths-ignore:
    - '**/README.md'
env:
  FEDORA_TOOLBOX: registry.fedoraproject.org/fedora-toolbox:latest
  WORKING_CONTAINER: fedora-toolbox-working-container
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: false
    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      # - uses: actions/checkout@v4
      # - uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ github.token }}
      - name: Init
        run: |
          cat /etc/os-release
          buildah pull $FEDORA_TOOLBOX
          buildah from  $FEDORA_TOOLBOX
      # - name: Deps
      #   run: |
      #     for item in bat eza fd-find flatpak-spawn fswatch fzf gh jq rclone ripgrep wl-clipboard yq zoxide
      #     do
      #     buildah run $WORKING_CONTAINER sh -c "dnf -y info installed ${item} &>/dev/null || dnf -y install ${item}"
      #     done
      #     for item in kitty-terminfo make cmake ncurses-devel openssl-devel perl-core libevent-devel readline-devel gettext-devel intltool
      #     do
      #     buildah run $WORKING_CONTAINER sh -c "dnf -y info installed ${item} &>/dev/null || dnf -y install ${item}"
      #     done
      - name: Neovim
        run: |
          wget -q -O - https://api.github.com/repos/neovim/neovim/releases/tags/nightly > neovim.json
          # NAME=$(jq -r '.name' neovim.json  | sed 's/v//')
          # URL=$(jq -r '.tarball_url' neovim.json
          # echo "name: ${NAME}"
          # echo "url: ${URL}"
          SRC=$(jq  -r '.assets[].browser_download_url' neovim.json | grep -oP '.+nvim-linux64.tar.gz$')
          TARG=/usr/local
          echo "src: ${SRC}"
          buildah add --chmod 755 $WORKING_CONTAINER $SRC $TAR
          buildah run $WORKING_CONTAINER ls -alr /usr/local


