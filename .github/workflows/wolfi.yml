name: CI
on: 
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
env:
  REGISTRY: 'ghcr.io/${{ github.repository_owner }}'
  NAME: 'tbx-wolfi-core'
jobs:
  zie_wolfi-toolbox:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
    - name: Log in to ghcr.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}
        registry: ${{ env.REGISTRY }}
    - name: Build
      run: |
        set -euxo pipefail
        CONTAINER=$(buildah from cgr.dev/chainguard/wolfi-base)
        buildah config \
          --label com.github.containers.toolbox='true' \
          --label usage='This image is meant to be used with the toolbox command' \
          --label summary='a Wolfi based toolbox' \
          --label maintainer='Grant MacKenzie <grantmacken@gmail.com>' ${CONTAINER}
        buildah run ${CONTAINER} sh -c 'apk update && apk upgrade'
        # buildah run ${CONTAINER} sh -c 'apk info -vv | sort'
        buildah run ${CONTAINER} sh -c 'apk add bash git grep command-not-found procps sudo-rs'
        buildah run ${CONTAINER} /bin/bash -c 'apk add curl findmnt gpg mount pigz rsync umount xauth zip'
        # iputils 
        buildah run ${CONTAINER} /bin/bash -c 'apk add coreutils diffutils findutils gnupg iproute2 keyutils libcap mount ncurses ncurses-terminfo net-tools openssh-client posix-libc-utils su-exec tcpdump tzdata util-linux util-linux-misc xz vulkan-loader'
        # Add Distrobox-host-exec
        buildah add ${CONTAINER} 'https://raw.githubusercontent.com/89luca89/distrobox/main/distrobox-host-exec' '/usr/bin/distrobox-host-exec'
        HOST_SPAWN_VERSION=$(buildah run ${CONTAINER} /bin/bash -c 'grep -oP "host_spawn_version=.\K(\d+\.){2}\d+" /usr/bin/distrobox-host-exec')
        echo ${HOST_SPAWN_VERSION}
        buildah run ${CONTAINER} /bin/bash -c "wget https://github.com/1player/host-spawn/releases/download/${HOST_SPAWN_VERSION}/host-spawn-x86_64 -O /usr/bin/host-spawn"
        buildah run ${CONTAINER} /bin/bash -c 'chmod +x /usr/bin/host-spawn'
        buildah run ${CONTAINER} /bin/bash -c 'ln -fs /bin/sh /usr/bin/sh'
        # symlink 
        buildah run ${CONTAINER} /bin/bash -c 'mkdir -p /usr/local/bin  && \
        ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/flatpak && \ 
        ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/podman && \
        ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/rpm-ostree'
        # Give UID = 1000 sudo
        buildah run ${CONTAINER} sh -c 'echo "#1000 ALL = (root) NOPASSWD:ALL" >> /etc/sudoers'
        # sh as bash
        buildah run ${CONTAINER} sh -c 'sed -i -e "/^root/s/\/bin\/ash/\/bin\/bash/" /etc/passwd'
        buildah commit --rm ${CONTAINER} tbx-base
        BUILDR=$(buildah from localhost/tbx-base)
        buildah run ${BUILDR} /bin/bash -c 'apk add build-base cmake gettext-dev gperf libtermkey libtermkey-dev libuv-dev libvterm-dev lua-luv lua-luv-dev lua5.1-lpeg lua5.1-mpack luajit-dev msgpack samurai tree-sitter-dev unibilium-dev'
        buildah run ${BUILDR} sh -c 'apk info -vv | sort'
        buildah commit --rm ${BUILDR} tbx-buildr

# https://github.com/ublue-os/bluefin/issues/576
